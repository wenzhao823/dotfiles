set nocp
let g:wombat_termcolors=256
set t_Co=256
colorscheme wombat256 
" colorscheme evening 
" colorscheme molokai 
" colorscheme desert
syntax on

" backup edit file
if has("vms")
    set nobackup	
else	  
    set backup
endif
set backupdir=~/.backup/vim
autocmd BufWritePre * let &backupext = strftime(".bak.%Y%m%d-%H:%M:%S")
let &termencoding=&encoding
set fileencodings=utf-8,gbk,ucs-bom,cp936

" plugin configuration
filetype on
filetype plugin on
filetype plugin indent on

set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set smartindent
set autoindent
" set mouse=a  " always use mouse

set incsearch
set hlsearch
set nowrapscan
set iskeyword+=_,$,@  "带有这些符号的单词不要被换行分割
set linespace=0    " 字符间插入的像素行数目
set cmdheight=1    " 命令行（在状态行下）的高度，默认为1，这里是2
set ruler          " 在编辑过程中，在右下角显示光标位置的状态行
" set statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]
set laststatus=0   " 总是显示状态行

set wrap
set ignorecase

set ai
set si
set smarttab
set lbr
set tw=0

" for ctags
let Tlist_Ctags_Cmd="/usr/bin/ctags"
let Tlist_Show_One_File = 1
let Tlist_Exit_OnlyWindow = 1
let Tlist_Use_Right_Window = 1  
map <silent> <F9> :TlistToggle<cr>

" smart backspace
set backspace=start,indent,eol


"NerdTreeTabs 开关
map <F2> :NERDTreeToggle<CR>
" map <F2> :NERDTreeMirror<CR>
set formatoptions=tcrqn
let NERDTreeMouseMode=2
let NERDTreeQuitOnOpen=0
let NERDTreeMirror=1
" autocmd vimenter * NERDTree
" autocmd vimenter * if !argc() | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

"let g:SuperTabRetainCompletionType=2
"let g:SuperTabDefaultCompletionType="<C-X><C-O>"

set completeopt=menu
set nocompatible

" show line number
set nu

" for code fold
set fdm=marker

" for php
" set showmatch
filetype plugin indent on
au FileType tpl,phtml,html,python,vim,javascript,js setl shiftwidth=2
au FileType tpl,phtml,html,python,vim,javascript,js setl tabstop=2
au FileType java,php setl shiftwidth=4
au FileType java,php setl tabstop=4

" set for vim syntax highlight
au BufNewFile,BufRead *.vcl setf vcl
au! Syntax vcl source ~/.vim/syntax/vcl.vim

map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

set pastetoggle=<F10>
map <F8> :!php -l %<CR>
nmap <C-N> :tabnext<CR>
nmap <C-P> :tabprevious<CR>


" Calendar map 
" map ca :Calendar<cr>
" :inoremap ( ()<ESC>i
" :inoremap ) <c-r>=ClosePair(')')<CR>
" :inoremap { {<CR>}<ESC>k
" :inoremap } <c-r>=ClosePair('}')<CR>
" :inoremap [ []<ESC>i
" :inoremap ] <c-r>=ClosePair(']')<CR>
" :inoremap " ""<ESC>i
" :inoremap ' ''<ESC>i
" function! ClosePair(char)
"    if getline('.')[col('.') - 1] == a:char
"        return "\<Right>"
"    else
"        return a:char
"    endif
" endfunction
